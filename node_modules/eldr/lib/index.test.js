// cSpell:disable
import { readFile } from "node:fs/promises";
import { resolve } from "node:path";
import { describe, it, test } from "vitest";
import { eldr } from "./index.js";
const languageTuples = [];
const bigTest = test.extend({
    // eslint-disable-next-line no-empty-pattern
    languageFixtures: async ({}, use) => {
        const bigTestFile = await readFile(resolve("benchmarks/big-test.txt"), "utf8");
        const tuples = bigTestFile.split("\n").map((lines) => lines.split("\t"));
        languageTuples.push(...tuples);
        await use(languageTuples);
        languageTuples.length = 0;
    },
});
describe("eldr", () => {
    it("loads successfully", ({ expect }) => {
        expect(eldr).toBeTypeOf("object");
    });
    it("uses the medium size ngram file by default", ({ expect }) => {
        expect(eldr.info()).toHaveProperty("Data type", "M60");
    });
    describe("detect", () => {
        it("detects a test sentence as spanish", ({ expect }) => {
            expect(eldr.detect("Hola, c贸mo te llamas?")).toHaveProperty("iso639_1", "es");
        });
        describe("getScores", () => {
            it("returns more than one language result for a test sentence", ({ expect, }) => {
                const scores = eldr.detect("Hola, c贸mo te llamas?").getScores();
                expect(Object.keys(scores)).to.have.lengthOf.greaterThan(1);
            });
        });
        describe("small text", () => {
            it("detects the word `to` as english", ({ expect }) => {
                expect(eldr.detect("To")).toHaveProperty("iso639_1", "en");
            });
        });
        describe("isReliable()", () => {
            it("returns true for a known good string", ({ expect }) => {
                expect(eldr.detect("Hola, c贸mo te llamas?").isReliable()).toBeTruthy();
            });
            it("returns false for a known bad string", ({ expect }) => {
                expect(eldr
                    .detect("zxz zcz zvz zbz znz zmz zlz zsz zdz zkz zjz pelo")
                    .isReliable()).toBeFalsy();
            });
        });
    });
    describe("result", () => {
        it("contains the language name", ({ expect }) => {
            const languageResult = eldr.detect("Hola, c贸mo te llamas?");
            expect(languageResult).toHaveProperty("languageName");
            expect(languageResult.languageName).toBe("Spanish");
        });
    });
});
bigTest("accuracy is >= 99.4%", ({ languageFixtures, expect }) => {
    let successCount = 0;
    let failCount = 0;
    for (const [iso639_1, text] of languageFixtures) {
        if (eldr.detect(text).iso639_1 === iso639_1) {
            successCount++;
        }
        else {
            failCount++;
        }
    }
    expect(successCount + failCount).toBeGreaterThan(60000);
    expect((successCount / (successCount + failCount)) * 100).toBeGreaterThan(99.4);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQUNqQixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDNUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVwQyxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFNUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFlBQVksQ0FBQztBQU1sQyxNQUFNLGNBQWMsR0FBZSxFQUFFLENBQUM7QUFFdEMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBbUI7SUFDNUMsNENBQTRDO0lBQzVDLGdCQUFnQixFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDbEMsTUFBTSxXQUFXLEdBQUcsTUFBTSxRQUFRLENBQ2hDLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxFQUNsQyxNQUFNLENBQ1AsQ0FBQztRQUNGLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDekUsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQy9CLE1BQU0sR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzFCLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7Q0FDRixDQUFDLENBQUM7QUFFSCxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRTtJQUNwQixFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7UUFDdEMs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